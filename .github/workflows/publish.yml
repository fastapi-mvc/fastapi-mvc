name: Publish

on:
  workflow_dispatch:
    inputs:
      sha:
        description: "Commit SHA"
        required: true

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  publish-pypi:
    runs-on: ubuntu-latest

    steps:
      - name: Download build artifact
        uses: dawidd6/action-download-artifact@v2
        with:
          workflow: main.yml
          workflow_conclusion: success
          name: ${{ format('fastapi_mvc-{0}', github.event.inputs.sha) }}
          commit: ${{ github.event.inputs.sha }}
          path: dist
      - name: Publish package to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          user: __token__
          password: ${{ secrets.PYPI_TOKEN }}
  publish-docs:
    runs-on: ubuntu-latest

    steps:
      - name: Download docs artifact
        uses: dawidd6/action-download-artifact@v2
        with:
          workflow: docs.yml
          workflow_conclusion: success
          name: ${{ format('docs-{0}', github.event.inputs.sha) }}
          commit: ${{ github.event.inputs.sha }}
          path: site
      - name: Publish docs to Netlify
        uses: nwtgck/actions-netlify@v2.1.0
        with:
          publish-dir: site
          production-deploy: true
          production-branch: master
          github-token: ${{ secrets.GITHUB_TOKEN }}
          enable-commit-comment: false
        env:
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
  publish-image:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - name: Download image artifact
        uses: dawidd6/action-download-artifact@v2
        with:
          workflow: image.yml
          workflow_conclusion: success
          name: ${{ format('nix-image-{0}', github.event.inputs.sha) }}
          commit: ${{ github.event.inputs.sha }}
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Update GitHub env
        run: echo "IMAGE_TAG=$(cat TAG)" >> $GITHUB_ENV
      - name: Load and push image
        run: |
          docker load --input result
          docker tag fastapi-mvc:latest ${{ format('{0}/{1}:latest', env.REGISTRY, env.IMAGE_NAME) }}
          docker push ${{ format('{0}/{1}:latest', env.REGISTRY, env.IMAGE_NAME) }}
          docker tag fastapi-mvc:latest ${{ format('{0}/{1}:{2}', env.REGISTRY, env.IMAGE_NAME, env.IMAGE_TAG) }}
          docker push ${{ format('{0}/{1}:{2}', env.REGISTRY, env.IMAGE_NAME, env.IMAGE_TAG) }}